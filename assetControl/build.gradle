apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    //// Esto sirve la actualizar el número de versión con cada compilación
    def versionPropsFile = file('version.properties')
    Properties versionProps = new Properties()
    if (!versionPropsFile.exists()) {
        versionProps['VERSION_PATCH'] = "0"
        versionProps['VERSION_NUMBER'] = "0"
        versionProps['VERSION_BUILD'] = "-1"
        // I set it to minus one so the first build is 0 which isn't super important.
        versionProps.store(versionPropsFile.newWriter(), null)
    }

    if (versionPropsFile.canRead()) {
        versionProps.load(new FileInputStream(versionPropsFile))
        def value = 0

        def runTasks = gradle.startParameter.taskNames
        if (':assetControl:assembleRelease' in runTasks ||
                ':assetControl:bundleRelease' in runTasks) {
            value = 1
        }

        def versionMajor = 13
        def versionMinor = 0
        def versionPatch = versionProps['VERSION_PATCH'].toInteger() + value
        def versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
        def versionNumber = versionProps['VERSION_NUMBER'].toInteger() + value

        versionProps['VERSION_PATCH'] = versionPatch.toString()
        versionProps['VERSION_BUILD'] = versionBuild.toString()
        versionProps['VERSION_NUMBER'] = versionNumber.toString()

        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            versionCode = versionNumber
            versionName = "${versionMajor}.${versionMinor}.${versionPatch} (${versionBuild})"
            testInstrumentationRunner = "android.support.test.runner.AndroidJUnitRunner"
        }
    } else {
        throw new Exception("Could not read version.properties!")
    }
    buildTypes {
        debug {
            initWith debug
            minifyEnabled(true)
            shrinkResources(true)
            proguardFiles getDefaultProguardFile(
                    'proguard-android.txt'),
                    'proguard-rules.pro'
            matchingFallbacks = ['debug']
        }
        release {
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled(true)

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources(true)

            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile(
                    'proguard-android.txt'),
                    'proguard-rules.pro'
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled = true
        sourceCompatibility jvmCompatibility
        targetCompatibility jvmCompatibility
    }
    buildFeatures {
        dataBinding = true
        viewBinding = true
    }
    productFlavors {
    }
    defaultConfig {
        applicationId = "com.dacosys.assetControl"
        minSdkVersion 23
        targetSdk = androidTargetSdk
        compileSdk = androidTargetSdk
        buildToolsVersion = '30.0.3'
        proguardFiles = ['proguard-rules.pro']
        manifestPlaceholders = [:]
    }
    sourceSets {
        main {
            res.srcDirs =
                    [
                            'src/main/res/layouts/activities',
                            'src/main/res/layouts/fragments',
                            'src/main/res/layouts/adapters',
                            'src/main/res/layouts',
                            'src/main/res'
                    ]
        }
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES']
        }
    }
    lint {
        abortOnError = false
        checkReleaseBuilds = false
        disable = ['MissingTranslation']
    }
    namespace = 'com.dacosys.assetControl'
}

dependencies {
    // Permite utilizar API restringidas no públicas del SDK
    implementation 'com.github.tiann:FreeReflection:3.1.0'

    // Permite utilizar las librerías Zxing en API 23
    // No actualizar a 2.0.0+
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.6'

    // Implementar Unit Test
    implementation 'androidx.test.ext:junit-ktx:1.1.5'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'junit:junit:4.13.2'

    implementation 'com.google.android.gms:play-services-vision:20.1.3'

    implementation 'androidx.annotation:annotation:1.7.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.compose.animation:animation-core:1.6.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.percentlayout:percentlayout:1.0.0'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'

    // Para ActivityResults
    implementation 'androidx.activity:activity-ktx:1.8.2'
    implementation 'androidx.fragment:fragment-ktx:1.6.2'

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.7.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0"

    // Apache Commons Net
    implementation 'commons-net:commons-net:3.9.0'

    // PARCELER
    implementation group: 'org.parceler', name: 'parceler-api', version: parcelerVersion

    // Keyboard events Library
    implementation 'net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:2.3.0'

    // Constaint Layout
    // No actualizar la 2.0.1 (Fallos en: 2.0.2, 2.0.3, 2.0.4, 2.1.0),
    // Todas tienen un bug al finalizar una animación que no re-dibuja los fragmentos
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'

    implementation 'androidx.percentlayout:percentlayout:1.0.0'

    // SOAP Library
    implementation 'com.google.code.ksoap2-android:ksoap2-android:3.6.2'

    // Java Expression Evaluator
    implementation 'com.udojava:EvalEx:2.7'

    // ASYNC HTTP
    implementation 'com.loopj.android:android-async-http:1.4.11'

    // debugImplementation because LeakCanary should only run in debug builds.
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.10'

    // ImageControl
    implementation project(':imageControl')

    // Jotter (Activity & fragment lifecycle listener)
    implementation project(':jotter')

    // Floating Camera Window
    implementation project(':easyfloat')

    // Barcode Library
    implementation project(':zxing-android-embedded')

    // Use the SplashScreen compat library.
    implementation 'androidx.core:core-splashscreen:1.0.1'
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.preference:preference-ktx:1.2.1'

    // SwipeR
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    // HONEYWELL NATIVE DRIVER
    implementation files('libs/honeywell/DataCollection.aar')

    // RecyclerView
    implementation 'androidx.recyclerview:recyclerview:1.3.2'

    // .env Support
    implementation 'io.github.cdimascio:dotenv-java:3.0.0'
}

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/ksoap2-android-releases/' }
}